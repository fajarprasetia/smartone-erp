// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  roleId        String
  role          Role      @relation(fields: [roleId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isActive      Boolean   @default(true)
  orders        OrderDetails[] @relation("UserOrderDetails")
}

model Role {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String?
  isSystem      Boolean   @default(false)
  isAdmin       Boolean   @default(false)
  permissions   Permission[]
  users         User[]
  dashboardCards DashboardCard[] @relation("DashboardCardRoles")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Permission {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String?
  roles         Role[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model DashboardCard {
  id            String    @id @default(cuid())
  title         String
  description   String?
  component     String
  roles         Role[]    @relation("DashboardCardRoles")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Product {
  id            String    @id @default(cuid())
  name          String
  description   String?
  price         Float
  stock         Int       @default(0)
  category      String?
  orderItems    OrderItem[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model customer {
  id            BigInt    @id @default(autoincrement())
  nama          String    @db.VarChar(255)
  telp          String?   @db.VarChar(255)
}

// WhatsApp Chat Message model
model ChatMessage {
  id                String    @id @default(cuid())
  customerId        String
  customer          Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  content           String    @db.Text
  isIncoming        Boolean   @default(true) // true if received from customer, false if sent by system
  timestamp         DateTime  @default(now())
  status            String?   // delivered, read, etc.
  messageType       String    @default("text") // text, image, document, etc.
  mediaUrl          String?   // URL for media attachments
  whatsappMessageId String?   // WhatsApp message ID for tracking status updates
  metadata          String?   @db.Text // Additional metadata as JSON string
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

// WhatsApp Template model
model WhatsAppTemplate {
  id            String    @id @default(cuid())
  name          String
  language      String    @default("en")
  components    Json      // Stored as JSON with header, body, footer, buttons
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// WhatsApp Configuration model
model WhatsAppConfig {
  id                 String    @id @default(cuid())
  apiKey             String?
  phoneNumberId      String?
  businessAccountId  String?
  accessToken        String?
  webhookVerifyToken String?
  status             String    @default("disconnected")
  lastChecked        DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Production {
  id            String    @id @default(cuid())
  orderId       String
  order         Order     @relation(fields: [orderId], references: [id])
  status        String
  type          String    // Print, Press, Cutting, DTF
  startDate     DateTime?
  endDate       DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  orderDetailsId String?
  orderDetails  OrderDetails? @relation(fields: [orderDetailsId], references: [id])
}

model FinancialTransaction {
  id            String    @id @default(cuid())
  type          String    // Income, Expense
  amount        Float
  description   String?
  category      String?
  date          DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Model based on the imported MariaDB order table
model order {
  id                 String    @id @default(cuid())
  tanggal            DateTime? @db.Date
  spk                String?   @db.VarChar(10)
  reject             String?   @db.VarChar(10)
  panjang_reject     String?   @db.VarChar(10)
  panjang_order      String?   @db.VarChar(10)
  lebar_kertas       String?   @db.VarChar(10)
  marketing          String?   @db.VarChar(10)
  nominal            String?   @db.VarChar(30)
  harga_satuan       String?   @db.VarChar(30)
  keterangan         String?   @db.VarChar(20)
  invoice            String?   @db.VarChar(30)
  jenis_pembayaran   String?   @db.VarChar(30)
  dp                 String?   @db.VarChar(30)
  tgl_dp             DateTime? @db.Date
  sisa               String?   @db.VarChar(30)
  pelunasan          String?   @db.VarChar(30)
  biaya_tambahan     String?   @db.VarChar(30)
  tgl_lunas          DateTime? @db.Date
  tgl_invoice        DateTime? @db.Date
  status             String?   @db.VarChar(20)
  statusm            String?   @db.VarChar(20)
  approval           String?   @db.VarChar(20)
  approve_mng        String?   @db.VarChar(20)
  approval_barang    String?   @db.VarChar(20)
  approval_opr       String?   @db.VarChar(20)
  opr_id             Int?
  user_id            Int?
  print_id           Int?
  press_id           Int?
  cutting_id         Int?
  dtf_id             Int?
  penyerahan_id      Int?
  designer_id        Int?
  manager_id         Int?
  customer_id        Int?
  rip                String?   @db.VarChar(20)
  produk             String?   @db.VarChar(255)
  path               String?   @db.VarChar(100)
  tf_dp              String?   @db.VarChar(100)
  tf_pelunasan       String?   @db.VarChar(100)
  tf_full            String?   @db.VarChar(100)
  catatan_tf         String?   @db.Text
  capture            String?   @db.VarChar(100)
  capture_name       String?   @db.VarChar(100)
  asal_bahan         String?   @db.VarChar(30)
  nama_kain          String?   @db.VarChar(100)
  jumlah_kain        String?   @db.VarChar(20)
  tipe_produk        String?   @db.VarChar(50)
  qty                String?   @db.VarChar(200)
  kategori           String?   @db.VarChar(50)
  gramasi            String?   @db.VarChar(30)
  nama_produk        String?   @db.VarChar(50)
  catatan            String?   @db.Text
  catatan_print      String?   @db.Text
  catatan_press      String?   @db.Text
  catatan_cutting    String?   @db.Text
  lebar_file         String?   @db.VarChar(255)
  est_order          DateTime? @db.Date
  jns_produk_id      Int?
  no_project         String?   @db.VarChar(255)
  tgl_print          DateTime? @db.Timestamp(6)
  print_done         DateTime? @db.Timestamp(6)
  tgl_press          DateTime? @db.Timestamp(6)
  press_done         DateTime? @db.Timestamp(6)
  tgl_cutting        DateTime? @db.Timestamp(6)
  cutting_done       DateTime? @db.Timestamp(6)
  tgl_dtf            DateTime? @db.Timestamp(6)
  dtf_done           DateTime? @db.Timestamp(6)
  warna_acuan        String?   @db.VarChar(255)
  statusprod         String?   @db.VarChar(255)
  lebar_kain         String?   @db.VarChar(255)
  prioritas          String?   @db.VarChar(255)
  prints_mesin       String?   @db.VarChar(255)
  prints_icc         String?   @db.VarChar(255)
  prints_target      String?   @db.VarChar(255)
  dimensi_file       String?   @db.VarChar(255)
  prints_qty         String?   @db.VarChar(100)
  total_kertas       String?   @db.VarChar(255)
  waktu_rip          DateTime? @db.Time(6)
  prints_bagus       String?   @db.VarChar(255)
  prints_reject      String?   @db.VarChar(255)
  prints_waste       String?   @db.VarChar(255)
  press_mesin        String?   @db.VarChar(255)
  press_presure      String?   @db.VarChar(255)
  press_suhu         String?   @db.VarChar(255)
  press_speed        Float?
  press_protect      String?   @db.VarChar(255)
  total_kain         String?   @db.VarChar(255)
  press_bagus        String?   @db.VarChar(255)
  press_reject       String?   @db.VarChar(255)
  press_waste        String?   @db.VarChar(255)
  printd_mesin       String?   @db.VarChar(255)
  printd_icc         String?   @db.VarChar(255)
  pet                String?   @db.VarChar(255)
  suhu_meja          String?   @db.VarChar(255)
  printd_speed       String?   @db.VarChar(255)
  white_setting      String?   @db.VarChar(255)
  choke              String?   @db.VarChar(255)
  white_precentage   String?   @db.VarChar(255)
  total_pet          String?   @db.VarChar(255)
  cutting_mesin      String?   @db.VarChar(255)
  cutting_speed      String?   @db.VarChar(255)
  acc                String?   @db.VarChar(255)
  power              String?   @db.VarChar(255)
  cutting_bagus      String?   @db.VarChar(255)
  cutting_reject     String?   @db.VarChar(255)
  tgl_pengiriman     DateTime? @db.Date
  tambah_bahan       String?   @db.Text
  tambah_cutting     String?   @db.VarChar(100)
  tambah_cutting1    String?   @db.VarChar(100)
  tambah_cutting2    String?   @db.VarChar(100)
  tambah_cutting3    String?   @db.VarChar(100)
  tambah_cutting4    String?   @db.VarChar(100)
  tambah_cutting5    String?   @db.VarChar(100)
  satuan_bahan       String?   @db.VarChar(100)
  satuan_cutting     String?   @db.VarChar(100)
  satuan_cutting1    String?   @db.VarChar(100)
  satuan_cutting2    String?   @db.VarChar(100)
  satuan_cutting3    String?   @db.VarChar(100)
  satuan_cutting4    String?   @db.VarChar(100)
  satuan_cutting5    String?   @db.VarChar(100)
  qty_bahan          String?   @db.VarChar(100)
  qty_cutting        String?   @db.VarChar(50)
  qty_cutting1       String?   @db.VarChar(50)
  qty_cutting2       String?   @db.VarChar(50)
  qty_cutting3       String?   @db.VarChar(50)
  qty_cutting4       String?   @db.VarChar(50)
  qty_cutting5       String?   @db.VarChar(50)
  total_bahan        String?   @db.VarChar(50)
  total_cutting      String?   @db.VarChar(50)
  total_cutting1     String?   @db.VarChar(50)
  total_cutting2     String?   @db.VarChar(50)
  total_cutting3     String?   @db.VarChar(50)
  total_cutting4     String?   @db.VarChar(50)
  total_cutting5     String?   @db.VarChar(50)
  nominal_total      String?   @db.VarChar(100)
  no                 Int?
  nospk              Int?
  catatan_design     String?   @db.Text
  tgl_app_cs         DateTime? @db.Timestamp(6)
  tgl_app_prod       DateTime? @db.Timestamp(6)
  tgl_app_manager    DateTime? @db.Timestamp(6)
  diskon             String?   @db.VarChar(6)
  tambah_produk      String?   @db.VarChar(255)
  created_at         DateTime? @db.Timestamp(6)
  updated_at         DateTime? @db.Timestamp(6)
}

// OrderDetails model
model OrderDetails {
  id              String    @id @default(cuid())
  userId          String?
  user            User?     @relation("UserOrderDetails", fields: [userId], references: [id])
  print_id        Int?
  press_id        Int?
  cutting_id      Int?
  dtf_id          Int?
  penyerahan_id   Int?
  designer_id     Int?
  manager_id      Int?
  customer_id     Int?
  customerId      String?
  customer        Customer? @relation("CustomerOrderDetails", fields: [customerId], references: [id])
  rip             String?   @db.VarChar(20)
  produk          String?   @db.VarChar(255)
  path            String?   @db.VarChar(100)
  tf_dp           String?   @db.VarChar(100)
  tf_pelunasan    String?   @db.VarChar(100)
  tf_full         String?   @db.VarChar(100)
  catatan_tf      String?
  capture         String?   @db.VarChar(100)
  capture_name    String?   @db.VarChar(100)
  asal_bahan      String?   @db.VarChar(30)
  nama_kain       String?   @db.VarChar(100)
  jumlah_kain     String?   @db.VarChar(20)
  tipe_produk     String?   @db.VarChar(50)
  qty             String?   @db.VarChar(200)
  kategori        String?   @db.VarChar(50)
  gramasi          String?   @db.VarChar(30)
  nama_produk     String?   @db.VarChar(50)
  catatan         String?
  catatan_print   String?
  catatan_press   String?
  catatan_cutting String?
  lebar_file      String?   @db.VarChar(255)
  est_order       DateTime?
  jns_produk_id   Int?
  no_project      String?   @db.VarChar(255)
  tgl_print       DateTime?
  print_done      DateTime?
  tgl_press       DateTime?
  press_done      DateTime?
  tgl_cutting     DateTime?
  cutting_done    DateTime?
  tgl_dtf         DateTime?
  dtf_done        DateTime?
  warna_acuan      String?   @db.VarChar(255)
  productions     Production[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

// Then update your User model to include the relation back to Order
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  roleId        String
  role          Role      @relation(fields: [roleId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isActive      Boolean   @default(true)
  orders        OrderDetails[] @relation("UserOrderDetails")
}

// And similarly for Customer model if it exists
model Customer {
  id            String    @id @default(cuid())
  name          String
  email         String?
  phoneNumber   String?   // Dedicated field for WhatsApp phone number
  phone         String?   // Keep original phone field for backward compatibility
  address       String?
  status        String?   @default("ACTIVE") // ACTIVE, INACTIVE, BLOCKED
  orders        Order[]
  orderDetails  OrderDetails[] @relation("CustomerOrderDetails")
  chatMessages  ChatMessage[] // Relation to chat messages
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
